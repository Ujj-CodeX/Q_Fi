openapi: 3.0.0
info:
  title: API
  description: API documentation for the Q-Fi quiz application
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: Local development server

paths:
  /admin-login:
    post:
      summary: Admin Login
      description: Authenticates an admin user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  redirect_url:
                    type: string
        "401":
          description: Unauthorized
  
  /login:
    post:
      summary: User Login
      description: Authenticates a user and returns a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        "401":
          description: Invalid credentials

  /protected:
    get:
      summary: Protected Route
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Access granted
        "400":
          description: Invalid token format

  /subjects1:
    get:
      summary: Get Subjects
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of subjects

  /chapters1/{subject_id}:
    get:
      summary: Get Chapters for a Subject
      security:
        - bearerAuth: []
      parameters:
        - name: subject_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of chapters

/get-questions:
    get:
      summary: Get questions for a specific chapter
      parameters:
        - name: chapter_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successfully retrieved questions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    question_text:
                      type: string
                    options:
                      type: array
                      items:
                        type: string

  /submit-quiz:
    post:
      summary: Submit quiz answers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                quiz_name:
                  type: string
                answers:
                  type: array
                  items:
                    type: object
                    properties:
                      question_id:
                        type: integer
                      selected_option:
                        type: string
      responses:
        200:
          description: Quiz submitted successfully

  /quiz-summary:
    get:
      summary: Get summary of all quizzes
      responses:
        200:
          description: List of quizzes and their summaries
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    quiz_name:
                      type: string
                    total_attempts:
                      type: integer
                    average_score:
                      type: number

  /user-summary:
    get:
      summary: Get summary of quiz attempts for a specific user
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Summary of user's quiz attempts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    quiz_name:
                      type: string
                    score:
                      type: integer
                    submission_time:
                      type: string
                      format: date-time

  /download-report:
    get:
      summary: Download quiz report as CSV
      responses:
        200:
          description: CSV file containing quiz report
          content:
            text/csv:
              schema:
                type: string
                format: binary

  /send-email-reminder:
    post:
      summary: Send an email reminder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recipient_email:
                  type: string
                  format: email
                subject:
                  type: string
                body:
                  type: string
      responses:
        200:
          description: Email reminder sent successfully

/edit-course/{course_id}:
    put:
      summary: Edit a course
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        200:
          description: Course updated successfully

  /edit-subject/{subject_id}:
    put:
      summary: Edit a subject
      parameters:
        - name: subject_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        200:
          description: Subject updated successfully

  /edit-chapter/{chapter_id}:
    put:
      summary: Edit a chapter
      parameters:
        - name: chapter_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        200:
          description: Chapter updated successfully

  /api/get_questions/{chapter_id}:
    get:
      summary: Get questions by chapter ID
      parameters:
        - name: chapter_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of questions for the chapter
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    text:
                      type: string
                    options:
                      type: array
                      items:
                        type: object
                        properties:
                          text:
                            type: string
                    correctAnswer:
                      type: string

  /api/edit_question/{question_id}:
    put:
      summary: Edit a question
      parameters:
        - name: question_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                options:
                  type: array
                  items:
                    type: string
                correctAnswer:
                  type: string
      responses:
        200:
          description: Question updated successfully

  /api/delete_question/{question_id}:
    delete:
      summary: Delete a question
      parameters:
        - name: question_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Question deleted successfully
        404:
          description: Question not found


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


